pipeline {
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment{
        SCANNER_HOME=tool 'sonar-scanner'
    }

    stages {
        stage('Git checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Pavangowda73/Tetris-V1.git'
            }
        }
        stage('sonarqube analysis') {
            steps {
                withSonarQubeEnv('sonar-server'){
                    sh '''$SCANNER_HOME/bin/sonar-scanner   -Dsonar.projectName=Tetris-V1 \
                          -Dsonar.projectKey=Tetris-V2'''
                }
            }
        }
        stage('Quality gate') {
            steps {
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
            }
        }
        stage('Install dependency') {
            steps {
                sh 'npm install'
            }
        }
        stage('Dependency check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('trivy file sytem scan') {
            steps {
                sh 'trivy fs . > trivyfs.txt'
            }
        }
        stage('docker build and tag') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                    sh '''
                    docker build -t tetrisv1 .
                    docker tag tetrisv1 pavan73384/tetrisv1:latest
                    '''
                    }
                }
            }
        }
        stage('trivy image scan') {
            steps {
                sh 'trivy image pavan73384/tetrisv1:latest > trivyimage.txt'
            }
        }
         stage('docker push') {
            steps {
                script{
                     withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                    sh 'docker push pavan73384/tetrisv1:latest'                
                    }
                }
            }
        }
         //stage('docker run') {
          //  steps {
           //     sh 'docker run --name tetrisv1 -p 3000:3000 pavan73384/tetrisv1:latest'
            //}
        //}
         stage('image updater') {
            steps {
                build job:'manifest',wait:true
            }
        }
    }
}
